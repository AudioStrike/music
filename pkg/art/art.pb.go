// Code generated by protoc-gen-go. DO NOT EDIT.
// source: pkg/art/art.proto

package net_audiostrike_art

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Bolt11AmountMultiplier int32

const (
	Bolt11AmountMultiplier_UNSPECIFIED   Bolt11AmountMultiplier = 0
	Bolt11AmountMultiplier_MILLI_BITCOIN Bolt11AmountMultiplier = 1
	Bolt11AmountMultiplier_BITCOIN_BIT   Bolt11AmountMultiplier = 2
	Bolt11AmountMultiplier_NANO_BITCOIN  Bolt11AmountMultiplier = 3
	Bolt11AmountMultiplier_PICO_BITCOIN  Bolt11AmountMultiplier = 4
)

var Bolt11AmountMultiplier_name = map[int32]string{
	0: "UNSPECIFIED",
	1: "MILLI_BITCOIN",
	2: "BITCOIN_BIT",
	3: "NANO_BITCOIN",
	4: "PICO_BITCOIN",
}

var Bolt11AmountMultiplier_value = map[string]int32{
	"UNSPECIFIED":   0,
	"MILLI_BITCOIN": 1,
	"BITCOIN_BIT":   2,
	"NANO_BITCOIN":  3,
	"PICO_BITCOIN":  4,
}

func (x Bolt11AmountMultiplier) String() string {
	return proto.EnumName(Bolt11AmountMultiplier_name, int32(x))
}

func (Bolt11AmountMultiplier) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_a83fef21c75be787, []int{0}
}

type ArtRequest struct {
	ArtistId             string   `protobuf:"bytes,1,opt,name=artist_id,json=artistId,proto3" json:"artist_id,omitempty"`
	ArtistTrackId        string   `protobuf:"bytes,2,opt,name=artist_track_id,json=artistTrackId,proto3" json:"artist_track_id,omitempty"`
	Since                uint64   `protobuf:"varint,3,opt,name=since,proto3" json:"since,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ArtRequest) Reset()         { *m = ArtRequest{} }
func (m *ArtRequest) String() string { return proto.CompactTextString(m) }
func (*ArtRequest) ProtoMessage()    {}
func (*ArtRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a83fef21c75be787, []int{0}
}

func (m *ArtRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ArtRequest.Unmarshal(m, b)
}
func (m *ArtRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ArtRequest.Marshal(b, m, deterministic)
}
func (m *ArtRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ArtRequest.Merge(m, src)
}
func (m *ArtRequest) XXX_Size() int {
	return xxx_messageInfo_ArtRequest.Size(m)
}
func (m *ArtRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ArtRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ArtRequest proto.InternalMessageInfo

func (m *ArtRequest) GetArtistId() string {
	if m != nil {
		return m.ArtistId
	}
	return ""
}

func (m *ArtRequest) GetArtistTrackId() string {
	if m != nil {
		return m.ArtistTrackId
	}
	return ""
}

func (m *ArtRequest) GetSince() uint64 {
	if m != nil {
		return m.Since
	}
	return 0
}

type Artist struct {
	ArtistId             string   `protobuf:"bytes,1,opt,name=artist_id,json=artistId,proto3" json:"artist_id,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Pubkey               string   `protobuf:"bytes,3,opt,name=pubkey,proto3" json:"pubkey,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Artist) Reset()         { *m = Artist{} }
func (m *Artist) String() string { return proto.CompactTextString(m) }
func (*Artist) ProtoMessage()    {}
func (*Artist) Descriptor() ([]byte, []int) {
	return fileDescriptor_a83fef21c75be787, []int{1}
}

func (m *Artist) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Artist.Unmarshal(m, b)
}
func (m *Artist) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Artist.Marshal(b, m, deterministic)
}
func (m *Artist) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Artist.Merge(m, src)
}
func (m *Artist) XXX_Size() int {
	return xxx_messageInfo_Artist.Size(m)
}
func (m *Artist) XXX_DiscardUnknown() {
	xxx_messageInfo_Artist.DiscardUnknown(m)
}

var xxx_messageInfo_Artist proto.InternalMessageInfo

func (m *Artist) GetArtistId() string {
	if m != nil {
		return m.ArtistId
	}
	return ""
}

func (m *Artist) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Artist) GetPubkey() string {
	if m != nil {
		return m.Pubkey
	}
	return ""
}

type ArtistPublication struct {
	Artist                 *Artist  `protobuf:"bytes,1,opt,name=artist,proto3" json:"artist,omitempty"`
	Signature              string   `protobuf:"bytes,2,opt,name=signature,proto3" json:"signature,omitempty"`
	SerializedArtResources []byte   `protobuf:"bytes,3,opt,name=serialized_art_resources,json=serializedArtResources,proto3" json:"serialized_art_resources,omitempty"`
	XXX_NoUnkeyedLiteral   struct{} `json:"-"`
	XXX_unrecognized       []byte   `json:"-"`
	XXX_sizecache          int32    `json:"-"`
}

func (m *ArtistPublication) Reset()         { *m = ArtistPublication{} }
func (m *ArtistPublication) String() string { return proto.CompactTextString(m) }
func (*ArtistPublication) ProtoMessage()    {}
func (*ArtistPublication) Descriptor() ([]byte, []int) {
	return fileDescriptor_a83fef21c75be787, []int{2}
}

func (m *ArtistPublication) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ArtistPublication.Unmarshal(m, b)
}
func (m *ArtistPublication) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ArtistPublication.Marshal(b, m, deterministic)
}
func (m *ArtistPublication) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ArtistPublication.Merge(m, src)
}
func (m *ArtistPublication) XXX_Size() int {
	return xxx_messageInfo_ArtistPublication.Size(m)
}
func (m *ArtistPublication) XXX_DiscardUnknown() {
	xxx_messageInfo_ArtistPublication.DiscardUnknown(m)
}

var xxx_messageInfo_ArtistPublication proto.InternalMessageInfo

func (m *ArtistPublication) GetArtist() *Artist {
	if m != nil {
		return m.Artist
	}
	return nil
}

func (m *ArtistPublication) GetSignature() string {
	if m != nil {
		return m.Signature
	}
	return ""
}

func (m *ArtistPublication) GetSerializedArtResources() []byte {
	if m != nil {
		return m.SerializedArtResources
	}
	return nil
}

type ArtResources struct {
	Artists []*Artist `protobuf:"bytes,1,rep,name=artists,proto3" json:"artists,omitempty"`
	Albums  []*Album  `protobuf:"bytes,2,rep,name=albums,proto3" json:"albums,omitempty"`
	Tracks  []*Track  `protobuf:"bytes,3,rep,name=tracks,proto3" json:"tracks,omitempty"`
	// network info
	Peers                []*Peer  `protobuf:"bytes,100,rep,name=peers,proto3" json:"peers,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ArtResources) Reset()         { *m = ArtResources{} }
func (m *ArtResources) String() string { return proto.CompactTextString(m) }
func (*ArtResources) ProtoMessage()    {}
func (*ArtResources) Descriptor() ([]byte, []int) {
	return fileDescriptor_a83fef21c75be787, []int{3}
}

func (m *ArtResources) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ArtResources.Unmarshal(m, b)
}
func (m *ArtResources) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ArtResources.Marshal(b, m, deterministic)
}
func (m *ArtResources) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ArtResources.Merge(m, src)
}
func (m *ArtResources) XXX_Size() int {
	return xxx_messageInfo_ArtResources.Size(m)
}
func (m *ArtResources) XXX_DiscardUnknown() {
	xxx_messageInfo_ArtResources.DiscardUnknown(m)
}

var xxx_messageInfo_ArtResources proto.InternalMessageInfo

func (m *ArtResources) GetArtists() []*Artist {
	if m != nil {
		return m.Artists
	}
	return nil
}

func (m *ArtResources) GetAlbums() []*Album {
	if m != nil {
		return m.Albums
	}
	return nil
}

func (m *ArtResources) GetTracks() []*Track {
	if m != nil {
		return m.Tracks
	}
	return nil
}

func (m *ArtResources) GetPeers() []*Peer {
	if m != nil {
		return m.Peers
	}
	return nil
}

type Album struct {
	ArtistId             string   `protobuf:"bytes,1,opt,name=artist_id,json=artistId,proto3" json:"artist_id,omitempty"`
	ArtistAlbumId        string   `protobuf:"bytes,2,opt,name=artist_album_id,json=artistAlbumId,proto3" json:"artist_album_id,omitempty"`
	Title                string   `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	ArtistTrackId        []string `protobuf:"bytes,4,rep,name=artist_track_id,json=artistTrackId,proto3" json:"artist_track_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Album) Reset()         { *m = Album{} }
func (m *Album) String() string { return proto.CompactTextString(m) }
func (*Album) ProtoMessage()    {}
func (*Album) Descriptor() ([]byte, []int) {
	return fileDescriptor_a83fef21c75be787, []int{4}
}

func (m *Album) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Album.Unmarshal(m, b)
}
func (m *Album) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Album.Marshal(b, m, deterministic)
}
func (m *Album) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Album.Merge(m, src)
}
func (m *Album) XXX_Size() int {
	return xxx_messageInfo_Album.Size(m)
}
func (m *Album) XXX_DiscardUnknown() {
	xxx_messageInfo_Album.DiscardUnknown(m)
}

var xxx_messageInfo_Album proto.InternalMessageInfo

func (m *Album) GetArtistId() string {
	if m != nil {
		return m.ArtistId
	}
	return ""
}

func (m *Album) GetArtistAlbumId() string {
	if m != nil {
		return m.ArtistAlbumId
	}
	return ""
}

func (m *Album) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *Album) GetArtistTrackId() []string {
	if m != nil {
		return m.ArtistTrackId
	}
	return nil
}

type Track struct {
	ArtistId             string               `protobuf:"bytes,1,opt,name=artist_id,json=artistId,proto3" json:"artist_id,omitempty"`
	ArtistAlbumId        string               `protobuf:"bytes,2,opt,name=artist_album_id,json=artistAlbumId,proto3" json:"artist_album_id,omitempty"`
	ArtistTrackId        string               `protobuf:"bytes,3,opt,name=artist_track_id,json=artistTrackId,proto3" json:"artist_track_id,omitempty"`
	AlbumTrackNumber     uint32               `protobuf:"varint,4,opt,name=album_track_number,json=albumTrackNumber,proto3" json:"album_track_number,omitempty"`
	Title                string               `protobuf:"bytes,5,opt,name=title,proto3" json:"title,omitempty"`
	Presentations        []*TrackPresentation `protobuf:"bytes,6,rep,name=presentations,proto3" json:"presentations,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Track) Reset()         { *m = Track{} }
func (m *Track) String() string { return proto.CompactTextString(m) }
func (*Track) ProtoMessage()    {}
func (*Track) Descriptor() ([]byte, []int) {
	return fileDescriptor_a83fef21c75be787, []int{5}
}

func (m *Track) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Track.Unmarshal(m, b)
}
func (m *Track) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Track.Marshal(b, m, deterministic)
}
func (m *Track) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Track.Merge(m, src)
}
func (m *Track) XXX_Size() int {
	return xxx_messageInfo_Track.Size(m)
}
func (m *Track) XXX_DiscardUnknown() {
	xxx_messageInfo_Track.DiscardUnknown(m)
}

var xxx_messageInfo_Track proto.InternalMessageInfo

func (m *Track) GetArtistId() string {
	if m != nil {
		return m.ArtistId
	}
	return ""
}

func (m *Track) GetArtistAlbumId() string {
	if m != nil {
		return m.ArtistAlbumId
	}
	return ""
}

func (m *Track) GetArtistTrackId() string {
	if m != nil {
		return m.ArtistTrackId
	}
	return ""
}

func (m *Track) GetAlbumTrackNumber() uint32 {
	if m != nil {
		return m.AlbumTrackNumber
	}
	return 0
}

func (m *Track) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *Track) GetPresentations() []*TrackPresentation {
	if m != nil {
		return m.Presentations
	}
	return nil
}

type TrackPresentation struct {
	FullId               string          `protobuf:"bytes,1,opt,name=full_id,json=fullId,proto3" json:"full_id,omitempty"`
	BitRateKbps          int32           `protobuf:"varint,3,opt,name=bit_rate_kbps,json=bitRateKbps,proto3" json:"bit_rate_kbps,omitempty"`
	Segments             []*TrackSegment `protobuf:"bytes,4,rep,name=segments,proto3" json:"segments,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *TrackPresentation) Reset()         { *m = TrackPresentation{} }
func (m *TrackPresentation) String() string { return proto.CompactTextString(m) }
func (*TrackPresentation) ProtoMessage()    {}
func (*TrackPresentation) Descriptor() ([]byte, []int) {
	return fileDescriptor_a83fef21c75be787, []int{6}
}

func (m *TrackPresentation) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TrackPresentation.Unmarshal(m, b)
}
func (m *TrackPresentation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TrackPresentation.Marshal(b, m, deterministic)
}
func (m *TrackPresentation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TrackPresentation.Merge(m, src)
}
func (m *TrackPresentation) XXX_Size() int {
	return xxx_messageInfo_TrackPresentation.Size(m)
}
func (m *TrackPresentation) XXX_DiscardUnknown() {
	xxx_messageInfo_TrackPresentation.DiscardUnknown(m)
}

var xxx_messageInfo_TrackPresentation proto.InternalMessageInfo

func (m *TrackPresentation) GetFullId() string {
	if m != nil {
		return m.FullId
	}
	return ""
}

func (m *TrackPresentation) GetBitRateKbps() int32 {
	if m != nil {
		return m.BitRateKbps
	}
	return 0
}

func (m *TrackPresentation) GetSegments() []*TrackSegment {
	if m != nil {
		return m.Segments
	}
	return nil
}

type TrackSegment struct {
	FullId               string   `protobuf:"bytes,1,opt,name=full_id,json=fullId,proto3" json:"full_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TrackSegment) Reset()         { *m = TrackSegment{} }
func (m *TrackSegment) String() string { return proto.CompactTextString(m) }
func (*TrackSegment) ProtoMessage()    {}
func (*TrackSegment) Descriptor() ([]byte, []int) {
	return fileDescriptor_a83fef21c75be787, []int{7}
}

func (m *TrackSegment) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TrackSegment.Unmarshal(m, b)
}
func (m *TrackSegment) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TrackSegment.Marshal(b, m, deterministic)
}
func (m *TrackSegment) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TrackSegment.Merge(m, src)
}
func (m *TrackSegment) XXX_Size() int {
	return xxx_messageInfo_TrackSegment.Size(m)
}
func (m *TrackSegment) XXX_DiscardUnknown() {
	xxx_messageInfo_TrackSegment.DiscardUnknown(m)
}

var xxx_messageInfo_TrackSegment proto.InternalMessageInfo

func (m *TrackSegment) GetFullId() string {
	if m != nil {
		return m.FullId
	}
	return ""
}

type Peer struct {
	Pubkey               string   `protobuf:"bytes,1,opt,name=pubkey,proto3" json:"pubkey,omitempty"`
	Host                 string   `protobuf:"bytes,2,opt,name=host,proto3" json:"host,omitempty"`
	Port                 uint32   `protobuf:"varint,3,opt,name=port,proto3" json:"port,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Peer) Reset()         { *m = Peer{} }
func (m *Peer) String() string { return proto.CompactTextString(m) }
func (*Peer) ProtoMessage()    {}
func (*Peer) Descriptor() ([]byte, []int) {
	return fileDescriptor_a83fef21c75be787, []int{8}
}

func (m *Peer) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Peer.Unmarshal(m, b)
}
func (m *Peer) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Peer.Marshal(b, m, deterministic)
}
func (m *Peer) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Peer.Merge(m, src)
}
func (m *Peer) XXX_Size() int {
	return xxx_messageInfo_Peer.Size(m)
}
func (m *Peer) XXX_DiscardUnknown() {
	xxx_messageInfo_Peer.DiscardUnknown(m)
}

var xxx_messageInfo_Peer proto.InternalMessageInfo

func (m *Peer) GetPubkey() string {
	if m != nil {
		return m.Pubkey
	}
	return ""
}

func (m *Peer) GetHost() string {
	if m != nil {
		return m.Host
	}
	return ""
}

func (m *Peer) GetPort() uint32 {
	if m != nil {
		return m.Port
	}
	return 0
}

type Invoice struct {
	ArtistId               string                 `protobuf:"bytes,1,opt,name=artist_id,json=artistId,proto3" json:"artist_id,omitempty"`
	Bolt11PaymentRequest   string                 `protobuf:"bytes,2,opt,name=bolt11_payment_request,json=bolt11PaymentRequest,proto3" json:"bolt11_payment_request,omitempty"`
	LightningPaymentHash   []byte                 `protobuf:"bytes,3,opt,name=lightning_payment_hash,json=lightningPaymentHash,proto3" json:"lightning_payment_hash,omitempty"`
	Tracks                 []*Track               `protobuf:"bytes,4,rep,name=tracks,proto3" json:"tracks,omitempty"`
	Bolt11Amount           int32                  `protobuf:"varint,100,opt,name=bolt11_amount,json=bolt11Amount,proto3" json:"bolt11_amount,omitempty"`
	Bolt11AmountMultiplier Bolt11AmountMultiplier `protobuf:"varint,101,opt,name=bolt11_amount_multiplier,json=bolt11AmountMultiplier,proto3,enum=net.audiostrike.art.Bolt11AmountMultiplier" json:"bolt11_amount_multiplier,omitempty"`
	XXX_NoUnkeyedLiteral   struct{}               `json:"-"`
	XXX_unrecognized       []byte                 `json:"-"`
	XXX_sizecache          int32                  `json:"-"`
}

func (m *Invoice) Reset()         { *m = Invoice{} }
func (m *Invoice) String() string { return proto.CompactTextString(m) }
func (*Invoice) ProtoMessage()    {}
func (*Invoice) Descriptor() ([]byte, []int) {
	return fileDescriptor_a83fef21c75be787, []int{9}
}

func (m *Invoice) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Invoice.Unmarshal(m, b)
}
func (m *Invoice) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Invoice.Marshal(b, m, deterministic)
}
func (m *Invoice) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Invoice.Merge(m, src)
}
func (m *Invoice) XXX_Size() int {
	return xxx_messageInfo_Invoice.Size(m)
}
func (m *Invoice) XXX_DiscardUnknown() {
	xxx_messageInfo_Invoice.DiscardUnknown(m)
}

var xxx_messageInfo_Invoice proto.InternalMessageInfo

func (m *Invoice) GetArtistId() string {
	if m != nil {
		return m.ArtistId
	}
	return ""
}

func (m *Invoice) GetBolt11PaymentRequest() string {
	if m != nil {
		return m.Bolt11PaymentRequest
	}
	return ""
}

func (m *Invoice) GetLightningPaymentHash() []byte {
	if m != nil {
		return m.LightningPaymentHash
	}
	return nil
}

func (m *Invoice) GetTracks() []*Track {
	if m != nil {
		return m.Tracks
	}
	return nil
}

func (m *Invoice) GetBolt11Amount() int32 {
	if m != nil {
		return m.Bolt11Amount
	}
	return 0
}

func (m *Invoice) GetBolt11AmountMultiplier() Bolt11AmountMultiplier {
	if m != nil {
		return m.Bolt11AmountMultiplier
	}
	return Bolt11AmountMultiplier_UNSPECIFIED
}

type Receipt struct {
	PaymentPreimage      []byte   `protobuf:"bytes,1,opt,name=payment_preimage,json=paymentPreimage,proto3" json:"payment_preimage,omitempty"`
	Invoice              *Invoice `protobuf:"bytes,2,opt,name=invoice,proto3" json:"invoice,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Receipt) Reset()         { *m = Receipt{} }
func (m *Receipt) String() string { return proto.CompactTextString(m) }
func (*Receipt) ProtoMessage()    {}
func (*Receipt) Descriptor() ([]byte, []int) {
	return fileDescriptor_a83fef21c75be787, []int{10}
}

func (m *Receipt) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Receipt.Unmarshal(m, b)
}
func (m *Receipt) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Receipt.Marshal(b, m, deterministic)
}
func (m *Receipt) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Receipt.Merge(m, src)
}
func (m *Receipt) XXX_Size() int {
	return xxx_messageInfo_Receipt.Size(m)
}
func (m *Receipt) XXX_DiscardUnknown() {
	xxx_messageInfo_Receipt.DiscardUnknown(m)
}

var xxx_messageInfo_Receipt proto.InternalMessageInfo

func (m *Receipt) GetPaymentPreimage() []byte {
	if m != nil {
		return m.PaymentPreimage
	}
	return nil
}

func (m *Receipt) GetInvoice() *Invoice {
	if m != nil {
		return m.Invoice
	}
	return nil
}

func init() {
	proto.RegisterEnum("net.audiostrike.art.Bolt11AmountMultiplier", Bolt11AmountMultiplier_name, Bolt11AmountMultiplier_value)
	proto.RegisterType((*ArtRequest)(nil), "net.audiostrike.art.ArtRequest")
	proto.RegisterType((*Artist)(nil), "net.audiostrike.art.Artist")
	proto.RegisterType((*ArtistPublication)(nil), "net.audiostrike.art.ArtistPublication")
	proto.RegisterType((*ArtResources)(nil), "net.audiostrike.art.ArtResources")
	proto.RegisterType((*Album)(nil), "net.audiostrike.art.Album")
	proto.RegisterType((*Track)(nil), "net.audiostrike.art.Track")
	proto.RegisterType((*TrackPresentation)(nil), "net.audiostrike.art.TrackPresentation")
	proto.RegisterType((*TrackSegment)(nil), "net.audiostrike.art.TrackSegment")
	proto.RegisterType((*Peer)(nil), "net.audiostrike.art.Peer")
	proto.RegisterType((*Invoice)(nil), "net.audiostrike.art.Invoice")
	proto.RegisterType((*Receipt)(nil), "net.audiostrike.art.Receipt")
}

func init() { proto.RegisterFile("pkg/art/art.proto", fileDescriptor_a83fef21c75be787) }

var fileDescriptor_a83fef21c75be787 = []byte{
	// 810 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x55, 0xcd, 0x8e, 0x1b, 0x45,
	0x10, 0xce, 0xf8, 0x37, 0x5b, 0xb6, 0x59, 0x6f, 0xb3, 0x32, 0x43, 0x12, 0x09, 0x33, 0x48, 0xcb,
	0xf2, 0x23, 0x47, 0x71, 0x02, 0xe2, 0xc2, 0xc1, 0x59, 0x12, 0x18, 0xb1, 0x71, 0x4c, 0x6f, 0xb8,
	0x70, 0x19, 0xf5, 0xd8, 0x85, 0xdd, 0xf2, 0x78, 0x66, 0xd2, 0xdd, 0x83, 0x14, 0x1e, 0x80, 0x03,
	0x17, 0x5e, 0x81, 0x67, 0xe2, 0x01, 0x78, 0x16, 0xd4, 0x3f, 0xb6, 0x27, 0xda, 0xf1, 0xb2, 0x87,
	0x1c, 0x46, 0xea, 0xfe, 0xea, 0xab, 0xaa, 0xaf, 0xbb, 0xaa, 0x6b, 0xe0, 0x24, 0x5f, 0x2f, 0x1f,
	0x32, 0xa1, 0xf4, 0x37, 0xca, 0x45, 0xa6, 0x32, 0xf2, 0x7e, 0x8a, 0x6a, 0xc4, 0x8a, 0x05, 0xcf,
	0xa4, 0x12, 0x7c, 0x8d, 0x23, 0x26, 0x54, 0xb0, 0x04, 0x98, 0x08, 0x45, 0xf1, 0x75, 0x81, 0x52,
	0x91, 0xfb, 0x70, 0xc4, 0x84, 0xe2, 0x52, 0x45, 0x7c, 0xe1, 0x7b, 0x43, 0xef, 0xfc, 0x88, 0xde,
	0xb5, 0x40, 0xb8, 0x20, 0x67, 0x70, 0xec, 0x8c, 0x4a, 0xb0, 0xf9, 0x5a, 0x53, 0x6a, 0x86, 0xd2,
	0xb3, 0xf0, 0x2b, 0x8d, 0x86, 0x0b, 0x72, 0x0a, 0x4d, 0xc9, 0xd3, 0x39, 0xfa, 0xf5, 0xa1, 0x77,
	0xde, 0xa0, 0x76, 0x13, 0xfc, 0x04, 0xad, 0x89, 0xa1, 0xdd, 0x9c, 0x84, 0x40, 0x23, 0x65, 0x1b,
	0x74, 0x91, 0xcd, 0x9a, 0x0c, 0xa0, 0x95, 0x17, 0xf1, 0x1a, 0xdf, 0x98, 0x88, 0x47, 0xd4, 0xed,
	0x82, 0xbf, 0x3d, 0x38, 0xb1, 0x31, 0x67, 0x45, 0x9c, 0xf0, 0x39, 0x53, 0x3c, 0x4b, 0xc9, 0x63,
	0x68, 0xd9, 0x68, 0x26, 0x76, 0x67, 0x7c, 0x7f, 0x54, 0x71, 0xee, 0x91, 0xf5, 0xa3, 0x8e, 0x4a,
	0x1e, 0xc0, 0x91, 0xe4, 0xcb, 0x94, 0xa9, 0x42, 0x6c, 0x73, 0xef, 0x01, 0xf2, 0x0d, 0xf8, 0x12,
	0x05, 0x67, 0x09, 0xff, 0x1d, 0x17, 0x11, 0x13, 0x2a, 0x12, 0x28, 0xb3, 0x42, 0xcc, 0x51, 0x1a,
	0x49, 0x5d, 0x3a, 0xd8, 0xdb, 0xcd, 0x75, 0x3a, 0x6b, 0xf0, 0xaf, 0x07, 0xdd, 0x32, 0x40, 0xbe,
	0x82, 0xb6, 0x4d, 0x29, 0x7d, 0x6f, 0x58, 0xff, 0x3f, 0x79, 0x5b, 0x2e, 0x19, 0x43, 0x8b, 0x25,
	0x71, 0xb1, 0x91, 0x7e, 0xcd, 0x78, 0xdd, 0xab, 0xf6, 0xd2, 0x14, 0xea, 0x98, 0xda, 0xc7, 0x14,
	0x4a, 0x6b, 0x3c, 0xec, 0x63, 0xaa, 0x46, 0x1d, 0x93, 0x3c, 0x84, 0x66, 0x8e, 0x28, 0xa4, 0xbf,
	0x30, 0x2e, 0x1f, 0x56, 0xba, 0xcc, 0x10, 0x05, 0xb5, 0xbc, 0xe0, 0x4f, 0x0f, 0x9a, 0x26, 0xed,
	0x6d, 0x7b, 0xc7, 0x88, 0xbb, 0xd6, 0x3b, 0x26, 0x84, 0xed, 0x1d, 0xc5, 0x55, 0x82, 0xae, 0xd2,
	0x76, 0x53, 0xd5, 0x79, 0x8d, 0x61, 0xfd, 0x5a, 0xe7, 0x05, 0x7f, 0xd4, 0xa0, 0x69, 0xd6, 0xef,
	0x46, 0x4c, 0x45, 0xda, 0x7a, 0x55, 0xc3, 0x7f, 0x09, 0xc4, 0x06, 0xb2, 0xb4, 0xb4, 0xd8, 0xc4,
	0x28, 0xfc, 0xc6, 0xd0, 0x3b, 0xef, 0xd1, 0xbe, 0xb1, 0x18, 0xe6, 0xd4, 0xe0, 0xfb, 0x23, 0x36,
	0xcb, 0x47, 0xbc, 0x84, 0x5e, 0x2e, 0x50, 0x62, 0xaa, 0x4c, 0x17, 0x4b, 0xbf, 0x65, 0x0a, 0x70,
	0x76, 0xb8, 0x66, 0xb3, 0x12, 0x9d, 0xbe, 0xed, 0x1c, 0xfc, 0xe5, 0xc1, 0xc9, 0x35, 0x12, 0xf9,
	0x00, 0xda, 0xbf, 0x16, 0x49, 0xb2, 0xbf, 0x92, 0x96, 0xde, 0x86, 0x0b, 0x12, 0x40, 0x2f, 0xe6,
	0x2a, 0x12, 0x4c, 0x61, 0xb4, 0x8e, 0x73, 0xdb, 0xd4, 0x4d, 0xda, 0x89, 0xb9, 0xa2, 0x4c, 0xe1,
	0x8f, 0x71, 0x2e, 0xc9, 0xb7, 0x70, 0x57, 0xe2, 0x72, 0x83, 0xa9, 0x92, 0xe6, 0xf2, 0x3b, 0xe3,
	0x8f, 0x0f, 0x6b, 0xbb, 0xb2, 0x4c, 0xba, 0x73, 0x09, 0x3e, 0x85, 0x6e, 0xd9, 0x72, 0x50, 0x4b,
	0xf0, 0x1c, 0x1a, 0xba, 0xbf, 0x4a, 0x8f, 0xde, 0x2b, 0x3f, 0x7a, 0x3d, 0x20, 0x56, 0x99, 0x54,
	0xdb, 0x01, 0xa1, 0xd7, 0x1a, 0xcb, 0x33, 0xa1, 0x8c, 0xec, 0x1e, 0x35, 0xeb, 0xe0, 0x9f, 0x1a,
	0xb4, 0xc3, 0xf4, 0xb7, 0x8c, 0xcf, 0xf1, 0xe6, 0x6e, 0x78, 0x02, 0x83, 0x38, 0x4b, 0xd4, 0xa3,
	0x47, 0x51, 0xce, 0xde, 0x68, 0x6d, 0x91, 0xb0, 0xd3, 0xd0, 0xa5, 0x38, 0xb5, 0xd6, 0x99, 0x35,
	0x6e, 0x27, 0xe5, 0x13, 0x18, 0x24, 0x7c, 0xb9, 0x52, 0x29, 0x4f, 0x97, 0x3b, 0xc7, 0x15, 0x93,
	0x2b, 0x37, 0x10, 0x4e, 0x77, 0x56, 0xe7, 0xf8, 0x03, 0x93, 0xab, 0xd2, 0x93, 0x6c, 0xdc, 0xfa,
	0x49, 0x7e, 0x02, 0x3d, 0xa7, 0x8f, 0x6d, 0xb2, 0x22, 0x55, 0xfe, 0xc2, 0x14, 0xa7, 0x6b, 0xc1,
	0x89, 0xc1, 0x08, 0x82, 0xff, 0x16, 0x29, 0xda, 0x14, 0x89, 0xe2, 0x79, 0xc2, 0x51, 0xf8, 0x38,
	0xf4, 0xce, 0xdf, 0x1b, 0x7f, 0x51, 0x99, 0xea, 0x69, 0x29, 0xc8, 0x8b, 0x9d, 0x0b, 0x1d, 0xc4,
	0x95, 0x78, 0x90, 0x40, 0x9b, 0xe2, 0x1c, 0x79, 0xae, 0xc8, 0x67, 0xd0, 0xdf, 0x1e, 0x3b, 0x17,
	0xc8, 0x37, 0x6c, 0x89, 0xe6, 0x6a, 0xbb, 0xf4, 0xd8, 0xe1, 0x33, 0x07, 0x93, 0xaf, 0xa1, 0xcd,
	0x6d, 0x25, 0xcc, 0x95, 0x76, 0xc6, 0x0f, 0x2a, 0xb5, 0xb8, 0x6a, 0xd1, 0x2d, 0xf9, 0xf3, 0xd7,
	0x30, 0xa8, 0xd6, 0x47, 0x8e, 0xa1, 0xf3, 0xf3, 0xf4, 0x6a, 0xf6, 0xec, 0x22, 0x7c, 0x1e, 0x3e,
	0xfb, 0xae, 0x7f, 0x87, 0x9c, 0x40, 0xef, 0x45, 0x78, 0x79, 0x19, 0x46, 0x4f, 0xc3, 0x57, 0x17,
	0x2f, 0xc3, 0x69, 0xdf, 0xd3, 0x1c, 0xb7, 0xd1, 0x60, 0xbf, 0x46, 0xfa, 0xd0, 0x9d, 0x4e, 0xa6,
	0x2f, 0x77, 0x94, 0xba, 0x46, 0x66, 0xe1, 0xc5, 0x1e, 0x69, 0x8c, 0x7f, 0x81, 0xfa, 0x44, 0x28,
	0x72, 0x05, 0xad, 0xef, 0x51, 0xe9, 0xd5, 0x47, 0x87, 0xc6, 0xb3, 0x6b, 0x84, 0x7b, 0x67, 0x37,
	0xcc, 0xef, 0xd2, 0x6f, 0x29, 0xb8, 0x13, 0xb7, 0xcc, 0x6f, 0xf8, 0xf1, 0x7f, 0x01, 0x00, 0x00,
	0xff, 0xff, 0x1a, 0x2c, 0x4a, 0x2d, 0x9b, 0x07, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ArtClient is the client API for Art service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ArtClient interface {
	GetArt(ctx context.Context, in *ArtRequest, opts ...grpc.CallOption) (*ArtistPublication, error)
}

type artClient struct {
	cc *grpc.ClientConn
}

func NewArtClient(cc *grpc.ClientConn) ArtClient {
	return &artClient{cc}
}

func (c *artClient) GetArt(ctx context.Context, in *ArtRequest, opts ...grpc.CallOption) (*ArtistPublication, error) {
	out := new(ArtistPublication)
	err := c.cc.Invoke(ctx, "/net.audiostrike.art.Art/GetArt", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ArtServer is the server API for Art service.
type ArtServer interface {
	GetArt(context.Context, *ArtRequest) (*ArtistPublication, error)
}

// UnimplementedArtServer can be embedded to have forward compatible implementations.
type UnimplementedArtServer struct {
}

func (*UnimplementedArtServer) GetArt(ctx context.Context, req *ArtRequest) (*ArtistPublication, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetArt not implemented")
}

func RegisterArtServer(s *grpc.Server, srv ArtServer) {
	s.RegisterService(&_Art_serviceDesc, srv)
}

func _Art_GetArt_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ArtRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ArtServer).GetArt(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/net.audiostrike.art.Art/GetArt",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ArtServer).GetArt(ctx, req.(*ArtRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Art_serviceDesc = grpc.ServiceDesc{
	ServiceName: "net.audiostrike.art.Art",
	HandlerType: (*ArtServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetArt",
			Handler:    _Art_GetArt_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "pkg/art/art.proto",
}
